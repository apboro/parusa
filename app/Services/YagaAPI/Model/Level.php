<?php
/**
 * Level
 *
 * PHP version 5
 *
 * @category Class
 * @package  YagaSchedule\Server\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Yaga order gateway
 *
 * Common schema for Yaga schedule requests. Swagger
 *
 * OpenAPI spec version: 18.40.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace App\Services\YagaAPI\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Level model.
 *
 * Уровень а зале  id        (*) - идентификатор уровня name          - название уровня seats         - список мест (для урованя с местами, то есть admission &#x3D; false) seat_count    - число мест (для уровня с местами, то есть admission &#x3D; false) admission     - true для уровня без мест, false для уровня с местами (по-умолчанию false) entrance_id   - идентификатор входа (например подъезда в Олимпийском) entrance_name - название входа (например подъезда в Олимпийском)
 *
 * @package YagaSchedule\Server\Model
 * @author  Swagger Codegen team
 */
class Level
{
        /**
     * @var string|null
     * @SerializedName("id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $id;

    /**
     * @var string|null
     * @SerializedName("name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $name;

    /**
     * @var YagaSchedule\Server\Model\Seat[]|null
     * @SerializedName("seats")
     * @Assert\All({
     *   @Assert\Type("YagaSchedule\Server\Model\Seat")
     * })
     * @Type("array<YagaSchedule\Server\Model\Seat>")
     */
    protected $seats;

    /**
     * @var int|null
     * @SerializedName("seatCount")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $seatCount;

    /**
     * @var bool|null
     * @SerializedName("admission")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $admission;

    /**
     * @var string|null
     * @SerializedName("entranceId")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $entranceId;

    /**
     * @var string|null
     * @SerializedName("entranceName")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $entranceName;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->seats = isset($data['seats']) ? $data['seats'] : null;
        $this->seatCount = isset($data['seatCount']) ? $data['seatCount'] : null;
        $this->admission = isset($data['admission']) ? $data['admission'] : null;
        $this->entranceId = isset($data['entranceId']) ? $data['entranceId'] : null;
        $this->entranceName = isset($data['entranceName']) ? $data['entranceName'] : null;
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param string|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string|null $name
     *
     * @return $this
     */
    public function setName($name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets seats.
     *
     * @return \App\Services\YagaAPI\Model\Seat[]|null
     */
    public function getSeats()
    {
        return $this->seats;
    }

    /**
     * Sets seats.
     *
     * @param YagaSchedule\Server\Model\Seat[]|null $seats
     *
     * @return $this
     */
    public function setSeats(Seat $seats = null)
    {
        $this->seats = $seats;

        return $this;
    }

    /**
     * Gets seatCount.
     *
     * @return int|null
     */
    public function getSeatCount()
    {
        return $this->seatCount;
    }

    /**
     * Sets seatCount.
     *
     * @param int|null $seatCount
     *
     * @return $this
     */
    public function setSeatCount($seatCount = null)
    {
        $this->seatCount = $seatCount;

        return $this;
    }

    /**
     * Gets admission.
     *
     * @return bool|null
     */
    public function isAdmission()
    {
        return $this->admission;
    }

    /**
     * Sets admission.
     *
     * @param bool|null $admission
     *
     * @return $this
     */
    public function setAdmission($admission = null)
    {
        $this->admission = $admission;

        return $this;
    }

    /**
     * Gets entranceId.
     *
     * @return string|null
     */
    public function getEntranceId()
    {
        return $this->entranceId;
    }

    /**
     * Sets entranceId.
     *
     * @param string|null $entranceId
     *
     * @return $this
     */
    public function setEntranceId($entranceId = null)
    {
        $this->entranceId = $entranceId;

        return $this;
    }

    /**
     * Gets entranceName.
     *
     * @return string|null
     */
    public function getEntranceName()
    {
        return $this->entranceName;
    }

    /**
     * Sets entranceName.
     *
     * @param string|null $entranceName
     *
     * @return $this
     */
    public function setEntranceName($entranceName = null)
    {
        $this->entranceName = $entranceName;

        return $this;
    }
}


