<?php
/**
 * Seat
 *
 * PHP version 5
 *
 * @category Class
 * @package  YagaSchedule\Server\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Yaga order gateway
 *
 * Common schema for Yaga schedule requests. Swagger
 *
 * OpenAPI spec version: 18.40.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace App\Services\YagaAPI15\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Seat model.
 *
 * Место на плане зала  id         (*) - идентификатор места row        (*) - номер ряда place      (*) - номер места fragment       - идентификатор фрагмента. Места, объединенные одним фрагментом, нельзя купить по отдельности. x              - координата X на плане зала y              - координата Y на плане зала
 *
 * @package YagaSchedule\Server\Model
 * @author  Swagger Codegen team
 */
class Seat
{
        /**
     * @var string|null
     * @SerializedName("id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $id;

    /**
     * @var string|null
     * @SerializedName("row")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $row;

    /**
     * @var string|null
     * @SerializedName("place")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $place;

    /**
     * @var string|null
     * @SerializedName("fragment")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $fragment;

    /**
     * @var int|null
     * @SerializedName("x")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $x;

    /**
     * @var int|null
     * @SerializedName("y")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $y;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->row = isset($data['row']) ? $data['row'] : null;
        $this->place = isset($data['place']) ? $data['place'] : null;
        $this->fragment = isset($data['fragment']) ? $data['fragment'] : null;
        $this->x = isset($data['x']) ? $data['x'] : null;
        $this->y = isset($data['y']) ? $data['y'] : null;
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param string|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets row.
     *
     * @return string|null
     */
    public function getRow()
    {
        return $this->row;
    }

    /**
     * Sets row.
     *
     * @param string|null $row
     *
     * @return $this
     */
    public function setRow($row = null)
    {
        $this->row = $row;

        return $this;
    }

    /**
     * Gets place.
     *
     * @return string|null
     */
    public function getPlace()
    {
        return $this->place;
    }

    /**
     * Sets place.
     *
     * @param string|null $place
     *
     * @return $this
     */
    public function setPlace($place = null)
    {
        $this->place = $place;

        return $this;
    }

    /**
     * Gets fragment.
     *
     * @return string|null
     */
    public function getFragment()
    {
        return $this->fragment;
    }

    /**
     * Sets fragment.
     *
     * @param string|null $fragment
     *
     * @return $this
     */
    public function setFragment($fragment = null)
    {
        $this->fragment = $fragment;

        return $this;
    }

    /**
     * Gets x.
     *
     * @return int|null
     */
    public function getX()
    {
        return $this->x;
    }

    /**
     * Sets x.
     *
     * @param int|null $x
     *
     * @return $this
     */
    public function setX($x = null)
    {
        $this->x = $x;

        return $this;
    }

    /**
     * Gets y.
     *
     * @return int|null
     */
    public function getY()
    {
        return $this->y;
    }

    /**
     * Sets y.
     *
     * @param int|null $y
     *
     * @return $this
     */
    public function setY($y = null)
    {
        $this->y = $y;

        return $this;
    }
}


