<?php
/**
 * Participant
 *
 * PHP version 5
 *
 * @category Class
 * @package  YagaSchedule\Server\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Yaga order gateway
 *
 * Common schema for Yaga schedule requests. Swagger
 *
 * OpenAPI spec version: 18.40.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace App\Services\YagaAPI15\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Participant model.
 *
 * Участники события (мероприятия)  id   (*)     - идентификатор участника name (*)     - имя участника roles        - роли участника integrations - службное поле
 *
 * @package YagaSchedule\Server\Model
 * @author  Swagger Codegen team
 */
class Participant
{
        /**
     * @var string|null
     * @SerializedName("id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $id;

    /**
     * @var string|null
     * @SerializedName("name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $name;

    /**
     * @var YagaSchedule\Server\Model\Role[]|null
     * @SerializedName("roles")
     * @Assert\All({
     *   @Assert\Type("YagaSchedule\Server\Model\Role")
     * })
     * @Type("array<YagaSchedule\Server\Model\Role>")
     */
    protected $roles;

    /**
     * @var YagaSchedule\Server\Model\SourceRef[]|null
     * @SerializedName("integrations")
     * @Assert\All({
     *   @Assert\Type("YagaSchedule\Server\Model\SourceRef")
     * })
     * @Type("array<YagaSchedule\Server\Model\SourceRef>")
     */
    protected $integrations;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->roles = isset($data['roles']) ? $data['roles'] : null;
        $this->integrations = isset($data['integrations']) ? $data['integrations'] : null;
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param string|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string|null $name
     *
     * @return $this
     */
    public function setName($name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets roles.
     *
     * @return \App\Services\YagaAPI15\Model\Role[]|null
     */
    public function getRoles()
    {
        return $this->roles;
    }

    /**
     * Sets roles.
     *
     * @param YagaSchedule\Server\Model\Role[]|null $roles
     *
     * @return $this
     */
    public function setRoles(Role $roles = null)
    {
        $this->roles = $roles;

        return $this;
    }

    /**
     * Gets integrations.
     *
     * @return \App\Services\YagaAPI15\Model\SourceRef[]|null
     */
    public function getIntegrations()
    {
        return $this->integrations;
    }

    /**
     * Sets integrations.
     *
     * @param YagaSchedule\Server\Model\SourceRef[]|null $integrations
     *
     * @return $this
     */
    public function setIntegrations(SourceRef $integrations = null)
    {
        $this->integrations = $integrations;

        return $this;
    }
}


